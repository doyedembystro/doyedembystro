   —Å–æ–æ–±—â–µ–Ω–∏–µ  =  –±–æ—Ç . send_message ( message .chat .id , " –°–æ–≥–ª–∞—Å–Ω—ã –ª–∏ –≤—ã –≤—ã–±—Ä–∞—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ?" , answer_markup = user_markup )
    –±–æ—Ç . register_next_step_handler ( msg , reg_or_auth )

@ –±–æ—Ç . message_handler ( content_types = [ '—Ç–µ–∫—Å—Ç' ])
    
def  reg_or_auth ( —Å–æ–æ–±—â–µ–Ω–∏–µ ):
    # —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    input_phone  =  —Å–æ–æ–±—â–µ–Ω–∏–µ . –∫–æ–Ω—Ç–∞–∫—Ç . –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞    
    –ø–æ–ø—Ä–æ–±—É–π :
        # —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        input_phone  =  —Å–æ–æ–±—â–µ–Ω–∏–µ . –∫–æ–Ω—Ç–∞–∫—Ç . –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞    

    # –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
    mydb  =  sqlite3 . –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è ( 'base.db' )
    –º–æ–π–∫—É—Ä—Å–æ—Ä  =  –º–æ—è –ë–î . –∫—É—Ä—Å–æ—Ä ()
        # –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
        mydb  =  sqlite3 . –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è ( 'base.db' )
        –º–æ–π–∫—É—Ä—Å–æ—Ä  =  –º–æ—è –ë–î . –∫—É—Ä—Å–æ—Ä ()

    # –Ω–∞–π—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
    –º–æ–π–∫—É—Ä—Å–æ—Ä . –≤—ã–ø–æ–ª–Ω–∏—Ç—å ( '–í–´–ë–ï–†–ò–¢–ï * –û–¢ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤' )      
    –ø–∞—Å—Å–∞–∂–∏—Ä—ã  =  –º–æ–π–∫—É—Ä—Å–æ—Ä . –ø—Ä–∏–Ω–µ—Å—Ç–∏ ()
        # –Ω–∞–π—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
        –º–æ–π–∫—É—Ä—Å–æ—Ä . –≤—ã–ø–æ–ª–Ω–∏—Ç—å ( '–í–´–ë–ï–†–ò–¢–ï * –û–¢ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤' )      
        –ø–∞—Å—Å–∞–∂–∏—Ä—ã  =  –º–æ–π–∫—É—Ä—Å–æ—Ä . –ø—Ä–∏–Ω–µ—Å—Ç–∏ ()

    –¥–ª—è  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  –≤  –ø–∞—Å—Å–∞–∂–∏—Ä–∞—Ö :
        table_phone  =  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [ 1 ]
        if  table_phone  ==  input_phone :    # if user_phone –Ω–∞–π—Ç–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
        –¥–ª—è  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  –≤  –ø–∞—Å—Å–∞–∂–∏—Ä–∞—Ö :
            table_phone  =  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [ 1 ]
            if  table_phone  ==  input_phone :    # if user_phone –Ω–∞–π—Ç–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤

            # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–∞
            –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è  =  —Ç–∏–ø—ã . ReplyKeyboardMarkup ( resize_keyboard = True , one_time_keyboard = True )
            button_history_ways  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–ú–æ–∏ –ø–æ–µ–∑–¥–∫–∏" )
            button_add_order  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–ù–æ–≤–∞—è –ø–æ–µ–∑–¥–∫–∞" )
            –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è . –¥–æ–±–∞–≤–∏—Ç—å ( button_history_ways )
            –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è . –¥–æ–±–∞–≤–∏—Ç—å ( button_add_order )
            –±–µ—Å–ø–æ—Ä—è–¥–æ–∫  =  –±–æ—Ç . send_message ( message .chat .id , " –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ . " , answer_markup = buttons_actions )
            –±–æ—Ç . register_next_step_handler ( –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ , Choose_action_passenger , input_phone , message.chat.id )       _ _ _ _
                # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–∞
                –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è  =  —Ç–∏–ø—ã . ReplyKeyboardMarkup ( resize_keyboard = True , one_time_keyboard = True )
                button_history_ways  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–ú–æ–∏ –ø–æ–µ–∑–¥–∫–∏" )
                button_add_order  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–ù–æ–≤–∞—è –ø–æ–µ–∑–¥–∫–∞" )
                –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è . –¥–æ–±–∞–≤–∏—Ç—å ( button_history_ways )
                –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è . –¥–æ–±–∞–≤–∏—Ç—å ( button_add_order )
                –±–µ—Å–ø–æ—Ä—è–¥–æ–∫  =  –±–æ—Ç . send_message ( message .chat .id , " –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ . " , answer_markup = buttons_actions )
                –±–æ—Ç . register_next_step_handler ( –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ , Choose_action_passenger , input_phone , message.chat.id )       _ _ _ _

            return  ''             # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é


    –º–æ–π–∫—É—Ä—Å–æ—Ä . –≤—ã–ø–æ–ª–Ω–∏—Ç—å ( 'SELECT * FROM Taxi_drivers' )      
    –¥—Ä–∞–π–≤–µ—Ä—ã  =  –º–æ–π–∫—É—Ä—Å–æ—Ä . –ø—Ä–∏–Ω–µ—Å—Ç–∏ ()

    –¥–ª—è  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  –≤  –¥—Ä–∞–π–≤–µ—Ä–∞—Ö :
        table_phone  =  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [ 1 ]
        if  table_phone  ==  input_phone :    # –µ—Å–ª–∏ user_phone –Ω–∞–π—Ç–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ taxi_drivers
            # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ç–∞–∫—Å–∏—Å—Ç–∞
            –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è  =  —Ç–∏–ø—ã . ReplyKeyboardMarkup ( resize_keyboard = True , one_time_keyboard = True )
            button_settings  =  —Ç–∏–ø—ã . –ö–Ω–æ–ø–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ( text = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" )
            button_choose_order  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–í—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ" )
            –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è . –¥–æ–±–∞–≤–∏—Ç—å ( button_settings )
            –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è . –¥–æ–±–∞–≤–∏—Ç—å ( button_choose_order )
            –±–µ—Å–ø–æ—Ä—è–¥–æ–∫  =  –±–æ—Ç . send_message ( message .chat .id , " –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ . " , answer_markup = buttons_actions )
            –±–æ—Ç . register_next_step_handler ( –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ , Choose_action_taxi_driver , input_phone , message.chat.id )       _ _ _ _
                return  ''             # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é


        –º–æ–π–∫—É—Ä—Å–æ—Ä . –≤—ã–ø–æ–ª–Ω–∏—Ç—å ( 'SELECT * FROM Taxi_drivers' )      
        –¥—Ä–∞–π–≤–µ—Ä—ã  =  –º–æ–π–∫—É—Ä—Å–æ—Ä . –ø—Ä–∏–Ω–µ—Å—Ç–∏ ()

        –¥–ª—è  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  –≤  –¥—Ä–∞–π–≤–µ—Ä–∞—Ö :
            table_phone  =  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [ 1 ]
            if  table_phone  ==  input_phone :    # –µ—Å–ª–∏ user_phone –Ω–∞–π—Ç–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ taxi_drivers
                # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ç–∞–∫—Å–∏—Å—Ç–∞
                –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è  =  —Ç–∏–ø—ã . ReplyKeyboardMarkup ( resize_keyboard = True , one_time_keyboard = True )
                button_settings  =  —Ç–∏–ø—ã . –ö–Ω–æ–ø–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ( text = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" )
                button_choose_order  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–í—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ" )
                –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è . –¥–æ–±–∞–≤–∏—Ç—å ( button_settings )
                –∫–Ω–æ–ø–∫–∏_–¥–µ–π—Å—Ç–≤–∏—è . –¥–æ–±–∞–≤–∏—Ç—å ( button_choose_order )
                –±–µ—Å–ø–æ—Ä—è–¥–æ–∫  =  –±–æ—Ç . send_message ( message .chat .id , " –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ . " , answer_markup = buttons_actions )
                –±–æ—Ç . register_next_step_handler ( –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ , Choose_action_taxi_driver , input_phone , message.chat.id )       _ _ _ _

            return  ''             # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
                return  ''             # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é

    # –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
    button_characters  =  —Ç–∏–ø—ã . ReplyKeyboardMarkup ( resize_keyboard = True , one_time_keyboard = True )
    button_taxi_driver  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–¢–∞–∫—Å–∏—Å—Ç" )
    button_passenger  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–ü–∞—Å—Å–∞–∂–∏—Ä" )
    –∫–Ω–æ–ø–∫–∏_—Å–∏–º–≤–æ–ª—ã . –¥–æ–±–∞–≤–∏—Ç—å ( button_taxi_driver )
    –∫–Ω–æ–ø–∫–∏_—Å–∏–º–≤–æ–ª—ã . –¥–æ–±–∞–≤–∏—Ç—å ( button_passenger )
    –±–µ—Å–ø–æ—Ä—è–¥–æ–∫  =  –±–æ—Ç . send_message ( message .chat .id , " –í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å? " , answer_markup = button_characters )
    –±–æ—Ç . register_next_step_handler ( –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ , Choose_character , input_phone )      


        # –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
        button_characters  =  —Ç–∏–ø—ã . ReplyKeyboardMarkup ( resize_keyboard = True , one_time_keyboard = True )
        button_taxi_driver  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–¢–∞–∫—Å–∏—Å—Ç" )
        button_passenger  =  —Ç–∏–ø—ã . KeyboardButton ( text = "–ü–∞—Å—Å–∞–∂–∏—Ä" )
        –∫–Ω–æ–ø–∫–∏_—Å–∏–º–≤–æ–ª—ã . –¥–æ–±–∞–≤–∏—Ç—å ( button_taxi_driver )
        –∫–Ω–æ–ø–∫–∏_—Å–∏–º–≤–æ–ª—ã . –¥–æ–±–∞–≤–∏—Ç—å ( button_passenger )
        –±–µ—Å–ø–æ—Ä—è–¥–æ–∫  =  –±–æ—Ç . send_message ( message .chat .id , " –í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å? " , answer_markup = button_characters )
        –±–æ—Ç . register_next_step_handler ( –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ , Choose_character , input_phone )      

    –∫—Ä–æ–º–µ :
        –±–µ—Å–ø–æ—Ä—è–¥–æ–∫  =  –±–æ—Ç . send_message ( —Å–æ–æ–±—â–µ–Ω–∏–µ . —á–∞—Ç . id , "–û—à–∏–±–∫–∞. –û—Ç–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!" )
        –±–æ—Ç . register_next_step_handler ( –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ , reg_or_auth )


@ –±–æ—Ç . message_handler ( content_types = [ '—Ç–µ–∫—Å—Ç' ])
def  Choose_action_passenger ( message , user_phone , teg_id ):       # –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏—è –ø–∞—Å—Å–∞–∂–∏—Ä–∞
    –µ—Å–ª–∏  —Å–æ–æ–±—â–µ–Ω–∏–µ . text  ==  '–ú–æ–∏ –ø–æ–µ–∑–¥–∫–∏' :
   # connect to base
        mydb = sqlite3.connect('base.db')
        mycursor = mydb.cursor()
    
        # find orders for history orders to passenger
        mycursor.execute('SELECT * FROM orders')      
        orders = mycursor.fetchall()
        
        for order in orders:
            if order[1] == user_phone:
                first_checkpoint = coords_to_address(order[2], order[3])    # start address
                second_checkpoint = coords_to_address(order[4], order[5])   # end address
                bot.send_message(message.chat.id, f"<i><b>–ó–∞–∫–∞–∑ ‚Ññ{order[0]}.</b></i>\n\n<i><b>–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞:</b></i> {first_checkpoint}\n\n<i><b>–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞:</b></i> {second_checkpoint}\n\n<i><b>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</b></i> {order[7]} –º\n\n<i><b>–í—Ä–µ–º—è –ø—É—Ç–∏:</b></i> {order[8]} –º–∏–Ω\n\n<b>–¶–µ–Ω–∞:</b> {order[6]} ‚ÇΩ", parse_mode='HTML', reply_markup=types.ReplyKeyboardRemove())
    
    elif message.text == '–ù–æ–≤–∞—è –ø–æ–µ–∑–¥–∫–∞':
        # geolocation new order
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_loca = types.KeyboardButton(text="üåê –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
          keyboard.add(button_loca)
        mess = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.üåê", reply_markup=keyboard)
        bot.register_next_step_handler(mess, geo_location, user_phone, '–ü–∞—Å—Å–∞–∂–∏—Ä')
        
@bot.message_handler(content_types=['text'])
def choose_action_taxi_driver(message, user_phone, teg_id):      # auth taxi driver action
    if message.text == '–í—ã–±—Ä–∞—Ç—å –ø–æ–µ–∑–¥–∫—É':
        # connect to base
        mydb = sqlite3.connect('base.db')
        mycursor = mydb.cursor()
    
        # choose order for taxi driver
        mycursor.execute(f'SELECT * FROM taxi_drivers WHERE phone={user_phone}')      
        taxi_driver = mycursor.fetchall()
    
        
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_loca = types.KeyboardButton(text="üåê –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
           mess = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.üåê", reply_markup=keyboard)
        bot.register_next_step_handler(mess, geo_location, user_phone, '–¢–∞–∫—Å–∏—Å—Ç', firm=taxi_driver[0][2], car_numbers=taxi_driver[0][3], src_photo_car=taxi_driver[0][-2])
        
        
@bot.message_handler(content_types=['text'])
def choose_character(message, user_phone):      # choose taxi_drivers or passenger
    if message.text == '–¢–∞–∫—Å–∏—Å—Ç':
        mess = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –º–∞—à–∏–Ω—ã.", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(mess, machine_firm, user_phone)
        
        
    elif message.text == '–ü–∞—Å—Å–∞–∂–∏—Ä':
        
        # connect to base
        mydb = sqlite3.connect('base.db')
        mycursor = mydb.cursor()
            
        # Add new passenger in 'passengers' table
        sqlFormula = "INSERT INTO passengers ('phone', 'teg_id') VALUES (?,?)"
        mycursor.execute(sqlFormula, (user_phone, message.chat.id))
        mydb.commit()
        
        
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_loca = types.KeyboardButton(text="üåê –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
        keyboard.add(button_loca)
        mess = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.üåê", reply_markup=keyboard)
        bot.register_next_step_handler(mess, geo_location, user_phone, '–ü–∞—Å—Å–∞–∂–∏—Ä')
        
@bot.message_handler(content_types=['text'])              # machine_firm
def machine_firm(message, phone):
    firm = message.text
    mess = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –º–∞—à–∏–Ω—ã.", reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(mess, car_numbers, phone, firm)

